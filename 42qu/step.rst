代码开发流程
==================================================


#. 产品设计
    #. 明确要做的事情
        #. 列出所有想法, 以及对应的原型, 我们可能的去做的形态
        #. 分析与网站定位的关系, 如何去运营
    #. 细化为功能点
        #. 找到所有的同类产品 , 并试用, 列出他们的功能点
        #. 对照这些产品, 列出我们需要的功能点
        #. 安排档期, 一期工程要做哪些, 二期工程要做哪些
        #. 给每个功能点安排开发的先后次序
    #. 设计URL
        #. 能直接访问的页面
        #. 每个页面的后续页面
    #. 编写文案
#. 后端开发
    #. 创建分支 分支的命名规则为 zuroc_20110103_rss ( 开发者_日期_功能名 )
        #.　如果是开源的志愿者, 请先fork一份代码, 然后创建按照以上规则分支 
    #. 数据库 
        #. 设计前请先阅读 表设计指南 
        #. 明确用到的表以及相应结构
        #. 明确索引字段
        #. 运行 zpage/misc/backup/backup_table.sh 备份表结构并push到版本控制
    #. 设计函数接口
        #. 函数命名参见 `PEP8 <http://code.google.com/p/zhong-wiki/wiki/PEP8>`_ 
            #. 缩近, 参数位置, =符号等等. 安装 zpage/linux/config.d/pythius 后可用 pydent . 排版当前目录下的所有python文件
            #. 参考 vim 配置文件 ~/zpage/linux/conf.d/vimrc , 可以把 F12 映射为 排版当前文件 , F11映射为运行当前python文件
    #. 创建分支
    #. 开发后台代码
    #. 向前端介绍任务(在workflow.com上创建以下标签, 并写清楚说明) 
          * 使用场景
            + 网址
                # 注意点
          * 设计原型
          * 后台接口
          * 分支名称
#. 前端开发
    #. 设计原型页
    #. 整理页面CSS代码
    #. 编写页面的Javascript代码
    #. 整合后台代码与页面
#. 质量保证
    #. 自行页面测试
    #. code review
    #. 修改 再 code review 直到没修改
    #. 其他人页面测试
#. 最终上线
    #. 合并上线
    #. 更新待做事项的文档

